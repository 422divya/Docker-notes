Why Docker?
==> With docker we can run each component in separate container with its own dependencies and its own libraries all within same VM and OS bit within separate environments 
or containers we just had to build the docker configurations once and all and others now get started with simple docker run command irrespective of what OS they run.

WHat are containers?
==> They are completely isolated environments as in they can have their own process and services, their own network interfaces, their own mounts just like VM except they all
share the same OS kernel. Differen t types of containers are LXC, LXD, LXCFS etc. Docker utilizes LXC containers.
Setting up these container env is hard as they are very low level and that is where Docker offers a high level tool with several powerful functionalities making easy for us.

Docker containers share the underlying kernel. WHat does it means?
==> Example. Lets say we have the RHEL OS with Docker installed on it. Docker can run any flavour of OS as long as they are all based on the same kernel. In this case Linux. 
If the underlying OS is RHEL Docker can run container based on another disr=tribution called ubunut, debian, fedora, centos. Docker utilizes the underlying kernel of the docker host
which workes woth all the OS above.

WHat is the OS that do not share the same kernel as these ==> Windows. We won't be able to run windows based container on a docker host with Linux on it. 
For this we need the Docker on the Windows server.

SO if we install docker on windows and run a Linux container on it, it will run, but it will not be running as linux container on windows. Windows run Linux container on Linux VM
under the hoods so its really linux container on Linux VM on Windows


==> Each VM has its own OS containers does not have it. Also we can run VM on different OS on hypervisor. Containers are mean to package the application, its dependencies and linbraries
so it can run on any machine without issue.

==> DOcker Repository

DOcker Hub


==> DOcker Image and Container

DOcker Image: It is package or the template just like VM template. It is use to create 1 or more containers

Containers: running instances of images that are isolated and have their own env set


==> When you run docker pull or docker run, Docker downloads the image and stores it on your Linux system under the default directory /var/lib/docker. 
This directory contains all Docker data including images, containers, volumes, and networks.
